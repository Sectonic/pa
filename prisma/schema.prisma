// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL_PRISMA")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode = "prisma"
}

model Type {
  id Int @id @default(autoincrement())
  name String
  sex String?
  tag String?
  image String?
  fileId String?
  links Link[]
  typeData TypeData? @relation(fields: [typeDataId], references: [id])
  typeDataId Int?

  @@index([typeDataId])
}

model TypeData {
  id Int @id @default(autoincrement())
  people Type[]
  linkCollections LinkCollection[]
  type String
  mbti String?
  extrovertIntrovert String?
  temperment String?
  quadra String?
  sensoryModality String?
  deModality String?
  oD String?
  energyInfo String?
  function1 String?
  function2 String?
  deciderNeed String?
  deciderLetter String?
  observerLetter String?
  observerNeed String?
  animal1 String?
  animal2 String?
  animal3 String?
  animal4 String?
  playModality String?
  sleepModality String?
  blastModality String?
  consumeModality String?
  observerAxis String?
  deciderAxis String?
  social String?

  @@unique([type, social])
}

model LinkCollection {
  id Int @id @default(autoincrement())
  links Link[]
  typeData TypeData @relation(fields: [typeDataId], references: [id])
  typeDataId Int

  @@index([typeDataId])
}

model Link {
  id Int @id @default(autoincrement())
  name String 
  url String
  person Type? @relation(fields: [personId], references: [id], onDelete: Cascade)
  personId Int?
  linkCollection LinkCollection? @relation(fields: [linkCollectionId], references: [id], onDelete: Cascade)
  linkCollectionId Int?

  @@index([personId])
  @@index([linkCollectionId])
}

model CourseActivity {
  id Int @id @default(autoincrement())
  url String
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int

  @@index([userId])
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String?
  pronouns String? 
  opsType String?
  opsTyping String?
  description String? @db.VarChar(400)
  email String @unique
  provider String?
  customerId String?
  subscriptionId String?
  courseActivities CourseActivity[]
}

model Price {
  id Int @id @default(autoincrement())
  amount Int @unique
  priceId String
}